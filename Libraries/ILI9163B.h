#ifndef	_ILI9163B_H_
#define	_ILI9163B_H_

#include "Default.h"

//Driver : ILI9163B

#define LCD_PIXEL_WIDTH          160
#define LCD_PIXEL_HEIGHT         128


#define ILI_CMD_NOP			0x00
#define ILI_CMD_SOFT_RESET		0x01
#define ILI_CMD_GET_IDENTIFICATION	0x04
#define ILI_CMD_GET_RED_CHANNEL		0x06
#define ILI_CMD_GET_GREEN_CHANNEL	0x07
#define ILI_CMD_GET_BLUE_CHANNEL	0x08
#define ILI_CMD_GET_STATUS		0x09
#define ILI_CMD_GET_POWER_MODE		0x0A
#define ILI_CMD_GET_ADDRESS_MODE	0x0B
#define ILI_CMD_GET_PIXEL_FORMAT	0x0C
#define ILI_CMD_GET_DISPLAY_MODE	0x0D
#define ILI_CMD_GET_SIGNAL_MODE		0x0E
#define ILI_CMD_GET_DIAGNOSTIC_RESULT	0x0F
#define ILI_CMD_ENTER_SLEEP_MODE	0x10
#define ILI_CMD_EXIT_SLEEP_MODE		0x11
#define ILI_CMD_ENTER_PARTIAL_MODE	0x12
#define ILI_CMD_ENTER_NORMAL_MODE	0x13

#define ILI_CMD_EXIT_INVERT_MODE	0x20
#define ILI_CMD_ENTER_INVERT_MODE	0x21

#define ILI_CMD_GAMMA_CURVE		0x26
#define ILI_CMD_DISPLAY_OFF		0x28
#define ILI_CMD_DISPLAY_ON		0x29

#define ILI_CMD_COLUMN_ADDRESS		0x2A
#define ILI_CMD_PAGE_ADDRESS		0x2B

#define ILI_CMD_WRITE_MEM_START		0x2C
#define ILI_CMD_WRITE_LUT		0x2D
#define ILI_CMD_READ_MEM_START		0x2E

#define ILI_CMD_PARTIAL_AREA		0x30
#define ILI_CMD_SCROLL_AREA		0x33
#define ILI_CMD_TEAR_OFF		0x34
#define ILI_CMD_TEAR_ON			0x35
#define ILI_CMD_ADDRESS_MODE		0x36
#define ILI_CMD_SCROLL_START		0x37
#define ILI_CMD_EXIT_IDLE_MODE		0x38
#define ILI_CMD_ENTER_IDLE_MODE		0x39
#define ILI_CMD_PIXEL_FORMAT		0x3A
#define ILI_CMD_WRITE_MEM_CONTINUE	0x3C
#define ILI_CMD_READ_MEM_CONTINUE	0x3E
#define ILI_CMD_TEAR_SCANLINE		0x44
#define ILI_CMD_GET_SCANLINE		0x45
#define ILI_CMD_READ_ID1		0xDA
#define ILI_CMD_READ_ID2		0xDB
#define ILI_CMD_READ_ID3		0xDC

#define ILI_CMD_FRAME_RATE_CTRL_NORMAL	0xB1
#define ILI_CMD_FRAME_RATE_CTRL_IDLE	0xB2
#define ILI_CMD_FRAME_RATE_CTRL_PARTIAL	0xB3

#define ILI_CMD_INVERSION_CTRL		0xB4
#define ILI_CMD_RGB_BLANKING		0xB5
#define ILI_CMD_SRC_DRIVER_DIR_CTRL	0xB7
#define ILI_CMD_GATE_DRIVER_DIR_CTRL	0xB8

#define ILI_CMD_POWER_CTRL_1		0xC0
#define ILI_CMD_POWER_CTRL_2		0xC1
#define ILI_CMD_POWER_CTRL_3		0xC2
#define ILI_CMD_POWER_CTRL_4		0xC3
#define ILI_CMD_POWER_CTRL_5		0xC4
#define ILI_CMD_VCOM_CTRL_1		0xC5
#define ILI_CMD_VCOM_CTRL_2		0xC6

#define ILI_CMD_VCOM_OFFSET		0xC7
#define ILI_CMD_ID4_VALUE		0xD3
#define ILI_CMD_NV_MEM_FUNC_1		0xD7
#define ILI_CMD_NV_MEM_FUNC_2		0xDE
#define ILI_CMD_POS_GAMMA_CORREC	0xE0
#define ILI_CMD_NEG_GAMMA_CORREC	0xE1
#define ILI_CMD_GAM_R_SEL		0xF2


#define LCD_CMD        (*((volatile uint8_t *)(0x60000000)))
#define LCD_DATA       (*((volatile uint8_t *)(0x60000001)))

#define ILI_RST_HIGH	( GPIOF->BSRRL = GPIO_Pin_1 )
#define	ILI_RST_LOW	( GPIOF->BSRRH = GPIO_Pin_1 )

#define	ILI_BACKLIGHT_HIGH	( GPIOF->BSRRL = GPIO_Pin_7 )
#define	ILI_BACKLIGHT_LOW	( GPIOF->BSRRH = GPIO_Pin_7 )

#ifdef _ILI9163B_C_
	#define ILI_EXT  		  	
#else
	#define ILI_EXT extern
#endif

ILI_EXT void ILI_Init(void);
ILI_EXT void ILI_SetWindow(UINT16 StartX, UINT16 StartY, UINT16 EndX, UINT16 EndY);
ILI_EXT void ILI_SetDirection(UINT16 bXOrder, UINT16 bYOrder);
ILI_EXT void ILI_Clear(UINT32 BkColor);

ILI_EXT void ILI_WRITE_START();
ILI_EXT void ILI_WRITE_RGB(UINT32 rgb);
ILI_EXT void ILI_WRITE_END();


ILI_EXT void ILI_READ_START();
ILI_EXT UINT32 ILI_READ_RGB();
ILI_EXT void ILI_READ_END();

#endif
